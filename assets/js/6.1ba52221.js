(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{365:function(t,a,e){t.exports=e.p+"assets/img/harbor_project_helm_charts.a0eaa6b9.png"},366:function(t,a,e){t.exports=e.p+"assets/img/harbor_upload_chart_files.0353006a.png"},367:function(t,a,e){t.exports=e.p+"assets/img/gitea_screenshot.3ab2ff11.png"},395:function(t,a,e){"use strict";e.r(a);var s=e(19),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"harbor-and-helm-charts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#harbor-and-helm-charts"}},[t._v("#")]),t._v(" Harbor and Helm charts")]),t._v(" "),s("p",[t._v("YouTube video: "),s("a",{attrs:{href:"https://youtu.be/XSszSd-TTCQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://youtu.be/XSszSd-TTCQ"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"add-project"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-project"}},[t._v("#")]),t._v(" Add Project")]),t._v(" "),s("ul",[s("li",[t._v("Go to "),s("code",[t._v("Projects")]),t._v(", click on "),s("code",[t._v("NEW PROJECT")]),t._v(' and create "private"\n'),s("code",[t._v("my_project")]),t._v(" project.")])]),t._v(" "),s("p",[t._v("You can also use the API directly:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -u "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin:admin"')]),t._v(" -X POST -H "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type: application/json"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://harbor.'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v('/api/projects"')]),t._v(" -d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\n  '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("project_name"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("my_project"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("public"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(': 0\n}"')]),t._v("\n")])])]),s("p",[t._v("Create namespace which will be used later:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("kubectl create namespace mytest\n")])])]),s("h2",{attrs:{id:"upload-helm-chart-using-cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upload-helm-chart-using-cli"}},[t._v("#")]),t._v(" Upload Helm Chart using CLI")]),t._v(" "),s("p",[t._v("Clone "),s("code",[t._v("harbor-helm")]),t._v(" repository containing Helm chart of Harbor:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/goharbor/harbor-helm.git\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C harbor-helm checkout v1.1.1\n")])])]),s("p",[t._v("See the Helm chart content:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" ./harbor-helm/\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cert  Chart.yaml  CONTRIBUTING.md  docs  LICENSE  README.md  templates  values.yaml\n")])])]),s("p",[t._v('Add the public "library" Helm Chart repository:')]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("helm repo "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" library https://harbor."),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("/chartrepo/library\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('"library" has been added to your repositories\n')])])]),s("p",[t._v("Push the "),s("code",[t._v("harbor-helm")]),t._v(" to the "),s("code",[t._v("library")]),t._v(' project in Harbor":')]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("helm push --username aduser05 --password admin ./harbor-helm/ library\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Pushing harbor-1.1.1.tgz to library...\nDone.\n")])])]),s("p",[t._v("Check the Helm Repository list:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("helm repo list\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("NAME            URL\nstable          https://kubernetes-charts.storage.googleapis.com\nlocal           http://127.0.0.1:8879/charts\njetstack        https://charts.jetstack.io\nappscode        https://charts.appscode.com/stable/\nharbor          https://helm.goharbor.io\nlibrary         https://harbor.mylabs.dev/chartrepo/library\n")])])]),s("p",[t._v("Check the content of the "),s("code",[t._v("library")]),t._v(" repository:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("helm repo update\nhelm search -l library/\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('Hang tight while we grab the latest from your chart repositories...\n...Skip local chart repository\n...Successfully got an update from the "harbor" chart repository\n...Successfully got an update from the "appscode" chart repository\n...Successfully got an update from the "library" chart repository\n...Successfully got an update from the "jetstack" chart repository\n...Successfully got an update from the "stable" chart repository\nUpdate Complete.\nNAME            CHART VERSION   APP VERSION     DESCRIPTION\nlibrary/harbor  1.1.1           1.8.1           An open source trusted cloud native registry that stores,...\n')])])]),s("p",[t._v("Harbor Project Helm Charts:")]),t._v(" "),s("p",[s("img",{attrs:{src:e(365),alt:"Harbor Project Helm Charts",title:"Harbor Project Helm Charts"}})]),t._v(" "),s("h2",{attrs:{id:"upload-signed-helm-chart-using-cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upload-signed-helm-chart-using-cli"}},[t._v("#")]),t._v(" Upload signed Helm Chart using CLI")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://upload.wikimedia.org/wikipedia/commons/6/61/Gnupg_logo.svg",alt:"GnuPG logo",title:"GnuPG logo"}})]),t._v(" "),s("p",[t._v("Create GPG key in "),s("code",[t._v(".gnupg")]),t._v(" directory:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GNUPGHOME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PWD")]),t._v("/.gnupg\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GNUPGHOME}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 0700 "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PWD")]),t._v("/.gnupg\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GNUPGHOME}")]),t._v("/my_gpg_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n%echo Generating a basic OpenPGP key\nKey-Type: RSA\nKey-Length: 2048\nSubkey-Type: RSA\nSubkey-Length: 2048\nName-Real: Helm User\nName-Comment: User\nName-Email: my_helm_user@"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\nExpire-Date: 0\n%no-protection\n%commit\nEOF")]),t._v("\n\ngpg2 --verbose --batch --gen-key "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GNUPGHOME}")]),t._v("/my_gpg_key\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("gpg: keybox '/home/pruzicka/git/k8s-harbor/tmp/.gnupg/pubring.kbx' created\ngpg: Generating a basic OpenPGP key\ngpg: no running gpg-agent - starting '/usr/bin/gpg-agent'\ngpg: waiting for the agent to come up ... (5s)\ngpg: connection to agent established\ngpg: writing self signature\ngpg: RSA/SHA256 signature from: \"6733D8DA847797FE [?]\"\ngpg: writing key binding signature\ngpg: RSA/SHA256 signature from: \"6733D8DA847797FE [?]\"\ngpg: RSA/SHA256 signature from: \"C8B680F790B62239 [?]\"\ngpg: writing public key to '/home/pruzicka/git/k8s-harbor/tmp/.gnupg/pubring.kbx'\ngpg: /home/pruzicka/git/k8s-harbor/tmp/.gnupg/trustdb.gpg: trustdb created\ngpg: using pgp trust model\ngpg: key 6733D8DA847797FE marked as ultimately trusted\ngpg: directory '/home/pruzicka/git/k8s-harbor/tmp/.gnupg/openpgp-revocs.d' created\ngpg: writing to '/home/pruzicka/git/k8s-harbor/tmp/.gnupg/openpgp-revocs.d/4DA54853FC984FF42EDD2C9B6733D8DA847797FE.rev'\ngpg: RSA/SHA256 signature from: \"6733D8DA847797FE Helm User (User) <my_helm_user@mylabs.dev>\"\ngpg: revocation certificate stored as '/home/pruzicka/git/k8s-harbor/tmp/.gnupg/openpgp-revocs.d/4DA54853FC984FF42EDD2C9B6733D8DA847797FE.rev'\n")])])]),s("p",[t._v("List the GPG secret key:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("gpg2 --list-secret-keys\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("gpg: checking the trustdb\ngpg: marginals needed: 3  completes needed: 1  trust model: pgp\ngpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u\n/home/pruzicka/git/k8s-harbor/tmp/.gnupg/pubring.kbx\n----------------------------------------------------\nsec   rsa2048 2019-07-19 [SCEA]\n      4DA54853FC984FF42EDD2C9B6733D8DA847797FE\nuid           [ultimate] Helm User (User) <my_helm_user@mylabs.dev>\nssb   rsa2048 2019-07-19 [SEA]\n")])])]),s("p",[t._v("Export private GPG key into "),s("code",[t._v(".gnupg/secring.gpg")]),t._v(", because Helm doesn't\nsupport GnuPG 2.1:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("gpg2 --export-secret-keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GNUPGHOME}")]),t._v("/secring.gpg\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("gpg: starting migration from earlier GnuPG versions\ngpg: porting secret keys from '/home/pruzicka/git/k8s-harbor/tmp/.gnupg/secring.gpg' to gpg-agent\ngpg: migration succeeded\n")])])]),s("p",[t._v("Download and unpack Gitea Helm chart:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --quiet https://github.com/jfelten/gitea-helm-chart gitea\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" -C ./gitea/ checkout --quiet 8c9adad\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" ./gitea/\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Chart.yaml  LICENSE  postgres-values.yaml  README.md  templates  values.yaml\n")])])]),s("p",[t._v("Create signed Helm package:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("helm package --sign --key "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_helm_user@'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v('"')]),t._v(" --keyring "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GNUPGHOME}")]),t._v("/secring.gpg --destination "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" ./gitea/\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Successfully packaged chart and saved it to: /home/pruzicka/git/k8s-harbor/tmp/gitea-1.6.1.tgz\n")])])]),s("p",[t._v("There should be 2 files in current directory - the archive with the Helm Chart\nand "),s("strong",[t._v("provenance")]),t._v(" file:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -la gitea*tgz*\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("-rw-rw-r-- 1 pruzicka pruzicka 20391 Jul 19 12:27 gitea-1.6.1.tgz\n-rwxr-xr-x 1 pruzicka pruzicka   966 Jul 19 12:27 gitea-1.6.1.tgz.prov\n")])])]),s("p",[t._v("See the provenance file:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" gitea-1.6.1.tgz.prov "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nappVersion: 1.6.1\ndescription: Git with a cup of tea\nicon: https://docs.gitea.io/images/gitea.png\nkeywords:\n- - git\n- - issue tracker\n- - code review\n- - wiki\n- - gitea\n- - gogs\nmaintainers:\n- - email: john.felten@gmail.com\n  name: John Felten\nname: gitea\nsources:\n- - https://github.com/go-gitea/gitea\n- - https://hub.docker.com/r/gitea/gitea/\nversion: 1.6.1\n\n...\nfiles:\n  gitea-1.6.1.tgz: sha256:f2e1989577cea950226abe714103709dca8574d82b7a0035b32e97f8d956bcae\n-----BEGIN PGP SIGNATURE-----\n...\n-----END PGP SIGNATURE-----\n")])])]),s("p",[t._v("Upload the signed Helm package to Harbor public project "),s("code",[t._v("library")]),t._v(":")]),t._v(" "),s("p",[t._v("Upload manually Gitea Helm Chart to Harbor by clicking on:")]),t._v(" "),s("p",[t._v("Projects -> library -> Helm Chart -> UPLOAD\n-> "),s("code",[t._v("gitea-1.6.1.tgz")]),t._v(" + "),s("code",[t._v("gitea-1.6.1.tgz.prov")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(366),alt:"Harbor Upload Chart Files",title:"Harbor Upload Chart Files"}})]),t._v(" "),s("p",[t._v("You can also do the same using the Harbor API:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -s -u "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aduser06:admin"')]),t._v(" -X POST "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://harbor.'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v('/api/chartrepo/library/charts"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -H "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type: multipart/form-data"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -F "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chart=@gitea-1.6.1.tgz;type=application/x-compressed-tar"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -F "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prov=@gitea-1.6.1.tgz.prov"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v("\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"saved"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"use-harbor-helm-chart-repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-harbor-helm-chart-repository"}},[t._v("#")]),t._v(" Use Harbor Helm Chart repository")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/helm/chartmuseum/0cfa25360682f66069d595fb0ede0fcc69bad41f/logo.png",alt:"ChartMuseum logo",title:"ChartMuseum logo"}})]),t._v(" "),s("p",[t._v("Install Gitea using Helm Chart stored in Harbor:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("helm repo list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -q library "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" helm repo "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" library https://harbor."),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("/chartrepo/library\nhelm repo update\nhelm "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --wait --name gitea --namespace gitea-system library/gitea "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set ingress.enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set ingress.tls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".secretName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ingress-cert-"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LETSENCRYPT_ENVIRONMENT}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set ingress.tls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".hosts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("gitea."),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set service.http.externalHost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("gitea."),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --set config.disableInstaller"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n")])])]),s("p",[t._v("Output:")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('Hang tight while we grab the latest from your chart repositories...\n...Skip local chart repository\n...Successfully got an update from the "appscode" chart repository\n...Successfully got an update from the "library" chart repository\n...Successfully got an update from the "harbor" chart repository\n...Successfully got an update from the "jetstack" chart repository\n...Successfully got an update from the "stable" chart repository\nUpdate Complete.\nNAME:   gitea\nLAST DEPLOYED: Fri Jul 19 12:34:25 2019\nNAMESPACE: gitea-system\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/ConfigMap\nNAME         DATA  AGE\ngitea-gitea  1     2s\n\n==> v1/Pod(related)\nNAME                        READY  STATUS    RESTARTS  AGE\ngitea-gitea-5fff4b9c-4k4xq  0/3    Init:0/1  0         2s\n\n==> v1/Secret\nNAME      TYPE    DATA  AGE\ngitea-db  Opaque  1     2s\n\n==> v1/Service\nNAME              TYPE       CLUSTER-IP      EXTERNAL-IP  PORT(S)   AGE\ngitea-gitea-http  ClusterIP  10.100.121.156  <none>       3000/TCP  2s\ngitea-gitea-ssh   ClusterIP  10.100.181.96   <none>       22/TCP    2s\n\n==> v1beta1/Deployment\nNAME         READY  UP-TO-DATE  AVAILABLE  AGE\ngitea-gitea  0/1    1           0          2s\n\n==> v1beta1/Ingress\nNAME                HOSTS             ADDRESS  PORTS  AGE\ngitea-giteaingress  gitea.mylabs.dev  80, 443  2s\n\n\nNOTES:\n1. Connect to your Gitea web URL by running:\n\n\n  Ingress is enabled for this chart deployment.  Please access the web UI at gitea.mylabs.dev\n\n2. Connect to your Gitea ssh port:\n\n  export POD_NAME=$(kubectl get pods --namespace gitea-system -l "app=gitea-gitea" -o jsonpath="{.items[0].metadata.name}")\n  echo http://127.0.0.1:8080/\n  kubectl port-forward $POD_NAME 8022:22\n')])])]),s("p",[t._v("If you open the "),s("a",{attrs:{href:"https://gitea.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitea.mylabs.dev"),s("OutboundLink")],1),t._v(" you should\nsee the initial Gitea page:")]),t._v(" "),s("p",[s("img",{attrs:{src:e(367),alt:"Gitea main page",title:"Gitea main page"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);